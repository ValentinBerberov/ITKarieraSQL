DROP SCHEMA IF EXISTS Supermarket;

CREATE SCHEMA IF NOT EXISTS Supermarket;
USE Supermarket;

CREATE TABLE IF NOT EXISTS Stores(
	Store_ID INT AUTO_INCREMENT PRIMARY KEY,
    Location VARCHAR(50) NOT NULL,
    Area DECIMAL(10, 2) NOT NULL, CHECK(Area>0),
    Yearly_Earnings DECIMAL(10, 2) NOT NULL, CHECK(Yearly_Earnings>0),
    Weekly_Visits INT NOT NULL
);

CREATE TABLE IF NOT EXISTS ProductTypes(
	Product_ID INT PRIMARY KEY,
    Product_Name VARCHAR(50) NOT NULL,
    Category_Name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS Employees(
	Employee_ID INT AUTO_INCREMENT PRIMARY KEY,
    Store_ID INT NOT NULL,
    First_Name VARCHAR(20) NOT NULL,
    Last_Name VARCHAR(20) NOT NULL,
    Position VARCHAR(50) NOT NULL,
    Yearly_Salary DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (Store_ID) REFERENCES Stores(Store_ID)
);

CREATE TABLE IF NOT EXISTS Items(
	Store_ID INT NOT NULL,
	Product_ID INT NOT NULL,
    Price DECIMAL(10, 2) NOT NULL, CHECK(Price>0),
    Discontinued BOOLEAN NOT NULL,
    In_Stock_Quantity INT NOT NULL, CHECK(In_Stock_Quantity>=0),
    Backlog_Quantity INT NOT NULL, CHECK(Backlog_Quantity>=0),
    Weekly_Purchases_Amount INT,
    FOREIGN KEY (Store_ID) REFERENCES Stores(Store_ID),
    FOREIGN KEY (Product_ID) REFERENCES ProductTypes(Product_ID)
);

CREATE TABLE IF NOT EXISTS Customers(
	Customer_ID INT AUTO_INCREMENT PRIMARY KEY,
    First_Name VARCHAR(20) NOT NULL,
    Last_Name VARCHAR(20) NOT NULL,
    Last_Visit DATETIME NULL,
    Last_Item_Purchased_ID INT NULL,
    FOREIGN KEY (Last_Item_Purchased_ID) REFERENCES Items(Product_ID)
);

CREATE TABLE IF NOT EXISTS Inventory(
	Inventory_ID INT AUTO_INCREMENT PRIMARY KEY,
    Location VARCHAR(50) NOT NULL,
    Product_ID INT NOT NULL,
    Total_Quantity INT NOT NULL,
    FOREIGN KEY (Product_ID) REFERENCES ProductTypes(Product_ID)
);

CREATE TABLE IF NOT EXISTS Shipments(
	Shipment_ID INT AUTO_INCREMENT PRIMARY KEY,
    Product_ID INT NOT NULL,
    From_Inventory_ID INT NOT NULL,
    To_Store_ID INT NOT NULL,
    Shipping_Date DATETIME NOT NULL,
    Quantity INT NOT NULL, CHECK(Quantity>0),
    FOREIGN KEY (From_Inventory_ID) REFERENCES Inventory(Inventory_ID),
    FOREIGN KEY (To_Store_ID) REFERENCES Stores(Store_ID),
    FOREIGN KEY (Product_ID) REFERENCES ProductTypes(Product_ID)
);

INSERT INTO Stores (store_id, location, area, yearly_earnings, weekly_visits) VALUES
(1, 'София', 250.5, 1500000.75, 5000),
(2, 'Пловдив', 180.2, 1200000.50, 4000),
(3, 'Варна', 200.0, 1300000.00, 4200),
(4, 'Бургас', 175.3, 1100000.30, 3800),
(5, 'Русе', 160.7, 950000.20, 3000),
(6, 'Стара Загора', 170.4, 1000000.00, 3100),
(7, 'Плевен', 150.9, 850000.00, 2900),
(8, 'Сливен', 140.5, 780000.50, 2700),
(9, 'Добрич', 130.2, 730000.00, 2600),
(10, 'Шумен', 145.8, 820000.25, 2800),
(11, 'Перник', 125.0, 690000.75, 2500),
(12, 'Хасково', 135.6, 750000.60, 2650),
(13, 'Благоевград', 155.3, 880000.40, 2850),
(14, 'Велико Търново', 160.0, 920000.90, 2950),
(15, 'Габрово', 120.7, 670000.30, 2300),
(16, 'Видин', 110.4, 590000.00, 2100),
(17, 'Кърджали', 140.9, 720000.80, 2600),
(18, 'Монтана', 115.5, 610000.50, 2200),
(19, 'Разград', 105.2, 540000.00, 2000),
(20, 'Търговище', 130.8, 770000.90, 2750);

INSERT INTO Employees(Store_ID, First_Name, Last_Name, Position, Yearly_Salary) VALUES
(1, "Теодор", "Първанов", "Мениджър", 2800),
(1, "Стамен", "Кирилов", "Касиер", 2100),
(1, "Васил", "Михайлов", "Касиер", 2000),
(2, "Васил", "Димов", "Мениджър", 2800),
(2, "Петър", "Николов", "Касиер", 2400),
(2, "Иван", "Пенев", "Касиер", 3000),
(3, "Кирил", "Димитров", "Мениджър", 3600),
(3, "Мартин", "Георгиев", "Касиер", 2600),
(3, "Никола", "Петров", "Касиер", 2000),
(4, "Стамен", "Алексиев", "Мениджър", 3900),
(4, "Румен", "Петров", "Касиер", 2600),
(4, "Виктор", "Димитров", "Касиер", 3000),
(5, "Стамен", "Атанасов", "Мениджър", 4000),
(5, "Тодор", "Вълчев", "Касиер", 1900),
(5, "Стефан", "Алексиев", "Касиер", 1800),
(6, "Иван", "Тенев", "Мениджър", 3900),
(6, "Михаил", "Вълчев", "Касиер", 2200),
(6, "Михаил", "Кирилов", "Касиер", 2700),
(7, "Михаил", "Николов", "Мениджър", 2700),
(7, "Андрей", "Дончев", "Касиер", 2400),
(7, "Павел", "Христов", "Касиер", 3000),
(8, "Георги", "Станков", "Мениджър", 4300),
(8, "Кристиан", "Милев", "Касиер", 2200),
(8, "Борис", "Димов", "Касиер", 2600),
(9, "Иван", "Йорданов", "Мениджър", 4500),
(9, "Иван", "Стоянов", "Касиер", 2100),
(9, "Никола", "Георгиев", "Касиер", 1800),
(10, "Тодор", "Григоров", "Мениджър", 2700),
(10, "Мартин", "Григоров", "Касиер", 3000),
(10, "Мартин", "Милев", "Касиер", 2900),
(11, "Павел", "Стоянов", "Мениджър", 4300),
(11, "Михаил", "Кирилов", "Касиер", 2900),
(11, "Емил", "Маринов", "Касиер", 2000),
(12, "Кирил", "Георгиев", "Мениджър", 2700),
(12, "Петър", "Тодоров", "Касиер", 3000),
(12, "Георги", "Георгиев", "Касиер", 1800),
(13, "Калоян", "Йорданов", "Мениджър", 3300),
(13, "Георги", "Василев", "Касиер", 3000),
(13, "Николай", "Атанасов", "Касиер", 2800),
(14, "Виктор", "Тодоров", "Мениджър", 3600),
(14, "Тодор", "Кръстев", "Касиер", 3000),
(14, "Кирил", "Григоров", "Касиер", 2000),
(15, "Боян", "Тенев", "Мениджър", 4500),
(15, "Павел", "Кирилов", "Касиер", 2600),
(15, "Денис", "Павлов", "Касиер", 2000),
(16, "Георги", "Стоянов", "Мениджър", 3700),
(16, "Боян", "Пенев", "Касиер", 2900),
(16, "Андрей", "Димов", "Касиер", 2600),
(17, "Мартин", "Димитров", "Мениджър", 3400),
(17, "Виктор", "Димитров", "Касиер", 2500),
(17, "Михаил", "Димов", "Касиер", 2500),
(18, "Иван", "Василев", "Мениджър", 4000),
(18, "Кирил", "Георгиев", "Касиер", 2900),
(18, "Мартин", "Милев", "Касиер", 1900),
(19, "Стефан", "Тодоров", "Мениджър", 4500),
(19, "Кристиан", "Рашков", "Касиер", 3000),
(19, "Емил", "Николов", "Касиер", 2300),
(20, "Виктор", "Тенев", "Мениджър", 3000),
(20, "Никола", "Тенев", "Касиер", 2200),
(20, "Кирил", "Стоянов", "Касиер", 1900)
;

INSERT INTO ProductTypes (Product_ID, Product_Name, Category_Name) VALUES
(1, "Хляб", "Основни хранителни продукти"),
(2, "Мляко", "Млечни продукти"),
(3, "Захар", "Основни хранителни продукти"),
(4, "Яйца", "Основни хранителни продукти"),
(5, "Краве масло", "Млечни продукти"),
(6, "Олио", "Основни хранителни продукти"),
(7, "Сирене", "Млечни продукти"),
(8, "Кашкавал", "Млечни продукти"),
(9, "Кисело мляко", "Млечни продукти"),
(10, "Салам", "Месни продукти"),
(11, "Сьомга", "Месни продукти"),
(12, "Картофи", "Зеленчуци"),
(13, "Лук", "Зеленчуци"),
(14, "Домати", "Зеленчуци"),
(15, "Чушки", "Зеленчуци"),
(16, "Моркови", "Зеленчуци"),
(17, "Банани", "Плодове"),
(18, "Ябълки", "Плодове"),
(19, "Портокали", "Плодове"),
(20, "Лимони", "Плодове"),
(21, "Грозде", "Плодове"),
(22, "Боб", "Основни хранителни продукти"),
(23, "Леща", "Основни хранителни продукти"),
(24, "Ориз", "Основни хранителни продукти"),
(25, "Макарони", "Основни хранителни продукти"),
(26, "Бисквити", "Сладки изделия"),
(27, "Шоколад", "Сладки изделия"),
(28, "Бадеми", "Ядки"),
(29, "Фъстъци", "Ядки"),
(30, "Лешници", "Ядки"),
(31, "Кашу", "Ядки"),
(32, "Мед", "Основни хранителни продукти"),
(33, "Кафе", "Напитки"),
(34, "Чай", "Напитки"),
(35, "Минерална вода", "Напитки"),
(36, "Студен чай", "Напитки"),
(37, "Тоалетна хартия", "Нехранителни продукти"),
(38, "Бял Monster", "Напитки")
;

INSERT INTO Inventory (inventory_id, location, total_quantity, product_id) VALUES
(1, 'София', 1500, 1),
(2, 'Пловдив', 2000, 2),
(3, 'Варна', 1200, 3),
(4, 'Бургас', 1800, 4),
(5, 'Русе', 900, 5),
(6, 'Стара Загора', 1300, 6),
(7, 'Плевен', 1100, 7),
(8, 'Сливен', 1400, 8),
(9, 'Добрич', 1000, 9),
(10, 'Шумен', 1600, 10); 

INSERT INTO Shipments (shipment_id, product_id, from_inventory_id, to_store_id, shipping_date, quantity) VALUES
(1, 1, 1, 1, '2024-01-02 08:15:00', 50),   -- София -> София
(2, 2, 1, 11, '2024-01-03 10:30:00', 40),  -- София -> Перник
(3, 3, 2, 2, '2024-01-04 12:45:00', 60),   -- Пловдив -> Пловдив
(4, 4, 2, 12, '2024-01-05 14:20:00', 45),  -- Пловдив -> Хасково
(5, 5, 3, 3, '2024-01-06 09:10:00', 55),   -- Варна -> Варна
(6, 6, 3, 9, '2024-01-07 15:50:00', 50),   -- Варна -> Добрич
(7, 7, 4, 4, '2024-01-08 11:30:00', 70),   -- Бургас -> Бургас
(8, 8, 4, 8, '2024-01-09 16:40:00', 65),   -- Бургас -> Сливен
(9, 9, 5, 5, '2024-01-10 07:20:00', 40),   -- Русе -> Русе
(10, 10, 5, 19, '2024-01-11 13:10:00', 35), -- Русе -> Разград
(11, 6, 6, 6, '2024-01-12 17:30:00', 48),  -- Стара Загора -> Стара Загора
(12, 7, 6, 15, '2024-01-13 08:05:00', 38), -- Стара Загора -> Габрово
(13, 8, 7, 7, '2024-01-14 18:20:00', 52),  -- Плевен -> Плевен
(14, 9, 7, 14, '2024-01-15 12:35:00', 47), -- Плевен -> Велико Търново
(15, 10, 10, 20, '2024-01-16 09:40:00', 50), -- Шумен -> Търговище
(16, 3, 1, 3, '2024-01-17 14:25:00', 60),   -- София -> Варна
(17, 4, 2, 4, '2024-01-18 16:10:00', 55),   -- Пловдив -> Бургас
(18, 5, 3, 5, '2024-01-19 07:50:00', 45),   -- Варна -> Русе
(19, 6, 4, 6, '2024-01-20 11:15:00', 50),   -- Бургас -> Стара Загора
(20, 7, 5, 7, '2024-01-21 18:05:00', 42),   -- Русе -> Плевен
(21, 8, 6, 8, '2024-01-22 13:55:00', 39),   -- Стара Загора -> Сливен
(22, 9, 7, 9, '2024-01-23 10:20:00', 44),   -- Плевен -> Добрич
(23, 10, 8, 10, '2024-01-24 15:30:00', 49),  -- Сливен -> Шумен
(24, 1, 9, 11, '2024-01-25 12:10:00', 41),  -- Добрич -> Перник
(25, 2, 10, 12, '2024-01-26 09:25:00', 37), -- Шумен -> Хасково
(26, 3, 1, 13, '2024-01-27 17:50:00', 53),  -- София -> Благоевград
(27, 4, 2, 14, '2024-01-28 14:40:00', 57),  -- Пловдив -> Велико Търново
(28, 5, 3, 15, '2024-01-29 08:30:00', 48),  -- Варна -> Габрово
(29, 6, 4, 16, '2024-01-30 16:05:00', 50),  -- Бургас -> Видин
(30, 7, 5, 17, '2024-01-31 10:45:00', 60),  -- Русе -> Кърджали
(31, 8, 6, 18, '2024-01-02 13:20:00', 42),  -- Стара Загора -> Монтана
(32, 9, 7, 19, '2024-01-03 18:30:00', 38),  -- Плевен -> Разград
(33, 10, 8, 20, '2024-01-04 07:55:00', 55),  -- Сливен -> Търговище
(34, 1, 9, 1, '2024-01-05 14:50:00', 40),   -- Добрич -> София
(35, 2, 10, 2, '2024-01-06 09:10:00', 35),  -- Шумен -> Пловдив
(36, 3, 1, 3, '2024-01-07 17:35:00', 51),   -- София -> Варна
(37, 4, 2, 4, '2024-01-08 12:20:00', 43),   -- Пловдив -> Бургас
(38, 5, 3, 5, '2024-01-09 08:45:00', 49),   -- Варна -> Русе
(39, 6, 4, 6, '2024-01-10 18:05:00', 55),   -- Бургас -> Стара Загора
(40, 7, 5, 7, '2024-01-11 14:15:00', 50);   -- Русе -> Плевен

INSERT INTO Items (Store_ID, Product_ID, Price, Discontinued, In_Stock_Quantity, Backlog_Quantity, Weekly_Purchases_Amount) VALUES
(1, 1, 1.63, FALSE, 23, 25, 350),
(1, 4, 2.87, FALSE, 98, 56, 120),
(1, 5, 4.86, FALSE, 20, 30, 50),
(1, 6, 6.49, FALSE, 91, 31, 70),
(1, 12, 1.94, FALSE, 46, 44, 150),
(1, 17, 4.41, FALSE, 28, 85, 120),
(1, 18, 3.27, FALSE, 67, 63, 130),
(1, 19, 4.16, FALSE, 27, 75, 100),
(1, 20, 4.23, FALSE, 68, 73, 60),
(1, 26, 3.16, FALSE, 33, 22, 100),
(1, 27, 3.27, FALSE, 64, 46, 120),
(1, 29, 5.50, FALSE, 90, 39, 50),
(1, 30, 9.36, FALSE, 77, 33, 20),
(1, 32, 12.50, FALSE, 86, 52, 30),
(1, 35, 1.14, FALSE, 47, 47, 200),
(2, 2, 3.24, FALSE, 84, 100, 200),
(2, 4, 4.52, FALSE, 53, 53, 120),
(2, 11, 28.50, FALSE, 48, 75, 30),
(2, 13, 1.50, FALSE, 76, 43, 130),
(2, 16, 2.83, FALSE, 86, 65, 100),
(2, 17, 3.40, FALSE, 95, 23, 120),
(2, 19, 3.04, FALSE, 61, 94, 100),
(2, 20, 4.13, FALSE, 30, 31, 60),
(2, 21, 5.85, FALSE, 67, 88, 50),
(2, 22, 1.68, FALSE, 87, 29, 40),
(2, 27, 2.76, FALSE, 54, 85, 120),
(2, 30, 7.44, FALSE, 21, 63, 20),
(2, 34, 3.42, FALSE, 69, 38, 150),
(2, 36, 1.97, FALSE, 26, 66, 80),
(2, 37, 2.91, FALSE, 36, 88, 180),
(3, 2, 3.54, FALSE, 67, 98, 200),
(3, 8, 13.75, FALSE, 70, 65, 40),
(3, 12, 2.00, FALSE, 63, 34, 150),
(3, 14, 4.34, FALSE, 50, 74, 120),
(3, 15, 2.79, FALSE, 77, 23, 80),
(3, 17, 3.68, FALSE, 93, 79, 120),
(3, 20, 2.98, FALSE, 23, 39, 60),
(3, 22, 2.14, FALSE, 20, 50, 40),
(3, 23, 1.80, FALSE, 97, 85, 40),
(3, 27, 3.84, FALSE, 66, 99, 120),
(3, 29, 4.45, FALSE, 50, 63, 50),
(3, 30, 7.12, FALSE, 63, 59, 20),
(3, 31, 11.64, FALSE, 43, 87, 20),
(3, 33, 2.06, FALSE, 82, 23, 100),
(3, 38, 3.07, FALSE, 41, 56, 70),
(4, 4, 2.90, FALSE, 70, 97, 120),
(4, 9, 1.76, FALSE, 64, 27, 150),
(4, 13, 1.60, FALSE, 64, 61, 130),
(4, 14, 2.83, FALSE, 98, 20, 120),
(4, 17, 2.87, FALSE, 52, 25, 120),
(4, 19, 3.10, FALSE, 56, 78, 100),
(4, 20, 3.78, FALSE, 89, 53, 60),
(4, 23, 2.32, FALSE, 36, 27, 40),
(4, 25, 2.49, FALSE, 97, 42, 90),
(4, 28, 9.80, FALSE, 28, 24, 30),
(4, 30, 8.56, FALSE, 63, 56, 20),
(4, 32, 10.80, FALSE, 87, 94, 30),
(4, 35, 1.09, FALSE, 44, 38, 200),
(4, 36, 2.65, FALSE, 89, 96, 80),
(4, 38, 2.38, FALSE, 43, 43, 70),
(5, 3, 1.78, FALSE, 69, 80, 80),
(5, 4, 4.17, FALSE, 50, 70, 120),
(5, 6, 6.00, FALSE, 20, 92, 70),
(5, 7, 9.66, FALSE, 52, 72, 60),
(5, 14, 3.89, FALSE, 31, 47, 120),
(5, 15, 3.00, FALSE, 55, 72, 80),
(5, 16, 3.64, FALSE, 74, 23, 100),
(5, 19, 2.75, FALSE, 20, 77, 100),
(5, 20, 3.71, FALSE, 95, 52, 60),
(5, 21, 6.20, FALSE, 80, 61, 50),
(5, 24, 3.89, FALSE, 39, 23, 80),
(5, 25, 1.85, FALSE, 96, 31, 90),
(5, 31, 13.08, FALSE, 89, 38, 20),
(5, 34, 2.52, FALSE, 35, 22, 150),
(5, 35, 1.13, FALSE, 58, 23, 200),
(6, 2, 3.84, FALSE, 95, 100, 200),
(6, 3, 1.98, FALSE, 41, 78, 80),
(6, 4, 3.04, FALSE, 52, 76, 120),
(6, 6, 5.33, FALSE, 90, 77, 70),
(6, 7, 13.34, FALSE, 42, 77, 60),
(6, 10, 8.90, FALSE, 89, 81, 90),
(6, 12, 2.27, FALSE, 61, 81, 150),
(6, 15, 3.87, FALSE, 89, 45, 80),
(6, 16, 2.49, FALSE, 60, 73, 100),
(6, 22, 2.04, FALSE, 26, 93, 40),
(6, 26, 2.46, FALSE, 59, 64, 100),
(6, 27, 2.85, FALSE, 42, 71, 120),
(6, 28, 11.70, FALSE, 64, 54, 30),
(6, 29, 4.10, FALSE, 42, 23, 50),
(6, 30, 10.08, FALSE, 29, 89, 20),
(7, 2, 3.24, FALSE, 67, 89, 200),
(7, 6, 6.21, FALSE, 21, 64, 70),
(7, 8, 12.54, FALSE, 55, 24, 40),
(7, 9, 1.82, FALSE, 29, 72, 150),
(7, 13, 1.52, FALSE, 34, 76, 130),
(7, 14, 3.32, FALSE, 87, 93, 120),
(7, 17, 3.36, FALSE, 87, 37, 120),
(7, 19, 3.71, FALSE, 82, 45, 100),
(7, 21, 6.50, FALSE, 47, 42, 50),
(7, 25, 2.09, FALSE, 84, 56, 90),
(7, 28, 12.40, FALSE, 32, 38, 30),
(7, 30, 7.36, FALSE, 20, 81, 20),
(7, 32, 8.90, FALSE, 67, 69, 30),
(7, 33, 2.04, FALSE, 37, 77, 100),
(7, 35, 1.26, FALSE, 43, 22, 200),
(8, 6, 6.38, FALSE, 21, 42, 70),
(8, 9, 2.30, FALSE, 26, 47, 150),
(8, 10, 10.40, FALSE, 25, 81, 90),
(8, 11, 24.75, FALSE, 21, 84, 30),
(8, 13, 1.78, FALSE, 61, 75, 130),
(8, 15, 3.24, FALSE, 65, 100, 80),
(8, 16, 2.24, FALSE, 77, 98, 100),
(8, 17, 2.87, FALSE, 87, 27, 120),
(8, 19, 3.52, FALSE, 31, 57, 100),
(8, 21, 5.90, FALSE, 40, 41, 50),
(8, 26, 2.30, FALSE, 57, 26, 100),
(8, 29, 6.40, FALSE, 20, 30, 50),
(8, 31, 14.28, FALSE, 93, 45, 20),
(8, 33, 1.66, FALSE, 49, 21, 100),
(8, 38, 2.38, FALSE, 78, 63, 70),
(9, 1, 1.86, FALSE, 50, 72, 350),
(9, 3, 2.42, FALSE, 90, 91, 80),
(9, 6, 7.04, FALSE, 45, 80, 70),
(9, 8, 9.68, FALSE, 86, 30, 40),
(9, 11, 28.25, FALSE, 68, 97, 30),
(9, 13, 1.26, FALSE, 50, 65, 130),
(9, 14, 4.09, FALSE, 41, 61, 120),
(9, 15, 3.27, FALSE, 48, 74, 80),
(9, 22, 2.26, FALSE, 76, 56, 40),
(9, 24, 3.26, FALSE, 82, 81, 80),
(9, 25, 2.42, FALSE, 37, 56, 90),
(9, 26, 3.19, FALSE, 36, 21, 100),
(9, 29, 4.55, FALSE, 100, 96, 50),
(9, 33, 1.68, FALSE, 91, 72, 100),
(9, 35, 1.10, FALSE, 89, 36, 200),
(10, 4, 3.54, FALSE, 30, 28, 120),
(10, 9, 2.40, FALSE, 48, 59, 150),
(10, 10, 12.50, FALSE, 44, 69, 90),
(10, 15, 3.54, FALSE, 89, 27, 80),
(10, 16, 2.80, FALSE, 81, 96, 100),
(10, 18, 3.60, FALSE, 40, 36, 130),
(10, 22, 1.96, FALSE, 43, 63, 40),
(10, 24, 3.85, FALSE, 51, 92, 80),
(10, 27, 3.39, FALSE, 79, 59, 120),
(10, 28, 10.50, FALSE, 97, 37, 30),
(10, 29, 4.00, FALSE, 74, 74, 50),
(10, 35, 1.33, FALSE, 71, 46, 200),
(10, 36, 2.12, FALSE, 37, 46, 80),
(10, 37, 2.88, FALSE, 44, 20, 180),
(10, 38, 2.35, FALSE, 62, 32, 70),
(11, 1, 1.52, FALSE, 27, 88, 350),
(11, 2, 2.46, FALSE, 89, 22, 200),
(11, 6, 4.84, FALSE, 96, 46, 70),
(11, 7, 12.07, FALSE, 29, 37, 60),
(11, 8, 13.42, FALSE, 23, 92, 40),
(11, 10, 9.40, FALSE, 63, 41, 90),
(11, 11, 25.75, FALSE, 54, 28, 30),
(11, 17, 3.92, FALSE, 32, 36, 120),
(11, 20, 3.04, FALSE, 43, 37, 60),
(11, 21, 5.05, FALSE, 41, 49, 50),
(11, 22, 2.14, FALSE, 44, 70, 40),
(11, 23, 1.92, FALSE, 26, 95, 40),
(11, 34, 3.18, FALSE, 64, 32, 150),
(11, 35, 1.39, FALSE, 68, 89, 200),
(11, 38, 2.02, FALSE, 75, 39, 70),
(12, 1, 1.92, FALSE, 82, 34, 350),
(12, 2, 2.70, FALSE, 37, 29, 200),
(12, 4, 4.02, FALSE, 81, 32, 120),
(12, 5, 6.42, FALSE, 72, 71, 50),
(12, 7, 10.50, FALSE, 36, 36, 60),
(12, 8, 11.22, FALSE, 70, 29, 40),
(12, 9, 2.58, FALSE, 25, 75, 150),
(12, 10, 8.90, FALSE, 50, 50, 90),
(12, 11, 32.25, FALSE, 40, 55, 30),
(12, 19, 2.78, FALSE, 93, 60, 100),
(12, 22, 1.64, FALSE, 43, 45, 40),
(12, 31, 12.36, FALSE, 94, 22, 20),
(12, 33, 1.76, FALSE, 91, 55, 100),
(12, 34, 2.70, FALSE, 25, 87, 150),
(12, 38, 1.94, FALSE, 25, 36, 70),
(13, 2, 3.54, FALSE, 33, 79, 200),
(13, 5, 6.54, FALSE, 80, 98, 50),
(13, 6, 6.05, FALSE, 64, 68, 70),
(13, 14, 3.57, FALSE, 41, 80, 120),
(13, 15, 2.64, FALSE, 72, 100, 80),
(13, 21, 6.00, FALSE, 86, 95, 50),
(13, 22, 2.18, FALSE, 23, 24, 40),
(13, 23, 2.46, FALSE, 22, 75, 40),
(13, 24, 4.02, FALSE, 62, 49, 80),
(13, 28, 12.30, FALSE, 88, 94, 30),
(13, 29, 5.85, FALSE, 97, 62, 50),
(13, 32, 11.70, FALSE, 61, 62, 30),
(13, 33, 1.62, FALSE, 23, 53, 100),
(13, 35, 0.97, FALSE, 54, 32, 200),
(13, 37, 2.46, FALSE, 82, 78, 180),
(14, 2, 2.49, FALSE, 90, 51, 200),
(14, 4, 4.45, FALSE, 38, 56, 120),
(14, 7, 11.45, FALSE, 26, 32, 60),
(14, 8, 8.80, FALSE, 90, 30, 40),
(14, 11, 22.75, FALSE, 28, 40, 30),
(14, 17, 3.12, FALSE, 57, 70, 120),
(14, 19, 3.97, FALSE, 71, 72, 100),
(14, 21, 4.05, FALSE, 36, 85, 50),
(14, 25, 2.00, FALSE, 48, 86, 90),
(14, 28, 10.30, FALSE, 53, 90, 30),
(14, 29, 5.30, FALSE, 60, 28, 50),
(14, 30, 9.12, FALSE, 58, 71, 20),
(14, 31, 10.68, FALSE, 94, 31, 20),
(14, 32, 9.10, FALSE, 90, 38, 30),
(14, 33, 2.44, FALSE, 74, 94, 100),
(15, 2, 3.60, FALSE, 92, 90, 200),
(15, 4, 4.02, FALSE, 88, 79, 120),
(15, 7, 13.54, FALSE, 33, 74, 60),
(15, 8, 9.68, FALSE, 65, 29, 40),
(15, 10, 12.70, FALSE, 21, 32, 90),
(15, 12, 2.05, FALSE, 81, 87, 150),
(15, 16, 2.52, FALSE, 63, 52, 100),
(15, 19, 2.72, FALSE, 94, 31, 100),
(15, 20, 4.27, FALSE, 67, 74, 60),
(15, 23, 2.30, FALSE, 89, 32, 40),
(15, 33, 2.38, FALSE, 29, 89, 100),
(15, 35, 1.33, FALSE, 72, 78, 200),
(15, 36, 2.37, FALSE, 80, 53, 80),
(15, 37, 3.30, FALSE, 58, 88, 180),
(15, 38, 2.66, FALSE, 56, 83, 70),
(16, 2, 2.52, FALSE, 30, 46, 200),
(16, 3, 2.38, FALSE, 38, 67, 80),
(16, 6, 6.65, FALSE, 58, 78, 70),
(16, 8, 11.99, FALSE, 64, 66, 40),
(16, 9, 2.02, FALSE, 50, 62, 150),
(16, 13, 1.77, FALSE, 39, 69, 130),
(16, 14, 2.94, FALSE, 85, 82, 120),
(16, 23, 2.22, FALSE, 45, 84, 40),
(16, 24, 2.90, FALSE, 49, 49, 80),
(16, 26, 3.36, FALSE, 27, 78, 100),
(16, 27, 3.87, FALSE, 38, 63, 120),
(16, 30, 6.80, FALSE, 59, 64, 20),
(16, 32, 12.80, FALSE, 27, 46, 30),
(16, 36, 1.78, FALSE, 59, 64, 80),
(16, 38, 2.11, FALSE, 87, 85, 70),
(17, 4, 3.71, FALSE, 24, 28, 120),
(17, 5, 6.06, FALSE, 59, 89, 50),
(17, 6, 6.38, FALSE, 58, 86, 70),
(17, 7, 10.39, FALSE, 85, 83, 60),
(17, 12, 2.38, FALSE, 91, 66, 150),
(17, 14, 3.19, FALSE, 58, 38, 120),
(17, 22, 2.20, FALSE, 64, 27, 40),
(17, 23, 1.68, FALSE, 56, 83, 40),
(17, 25, 2.38, FALSE, 100, 93, 90),
(17, 26, 3.42, FALSE, 95, 34, 100),
(17, 29, 4.25, FALSE, 72, 99, 50),
(17, 32, 10.80, FALSE, 52, 28, 30),
(17, 33, 1.84, FALSE, 36, 43, 100),
(17, 34, 2.85, FALSE, 71, 23, 150),
(17, 36, 1.72, FALSE, 50, 53, 80),
(18, 1, 1.94, FALSE, 90, 98, 350),
(18, 5, 6.54, FALSE, 70, 24, 50),
(18, 9, 2.24, FALSE, 87, 59, 150),
(18, 10, 9.60, FALSE, 28, 96, 90),
(18, 12, 2.00, FALSE, 46, 82, 150),
(18, 13, 1.22, FALSE, 31, 77, 130),
(18, 17, 4.06, FALSE, 96, 77, 120),
(18, 18, 3.60, FALSE, 20, 58, 130),
(18, 23, 2.08, FALSE, 62, 44, 40),
(18, 24, 4.34, FALSE, 51, 80, 80),
(18, 26, 2.63, FALSE, 95, 63, 100),
(18, 31, 10.32, FALSE, 31, 38, 20),
(18, 32, 9.20, FALSE, 39, 30, 30),
(18, 33, 2.30, FALSE, 36, 68, 100),
(18, 38, 2.90, FALSE, 76, 55, 70),
(19, 1, 2.45, FALSE, 50, 100, 350),
(19, 2, 3.48, FALSE, 47, 62, 200),
(19, 5, 7.20, FALSE, 69, 25, 50),
(19, 7, 12.81, FALSE, 52, 67, 60),
(19, 8, 12.54, FALSE, 33, 26, 40),
(19, 10, 9.70, FALSE, 29, 85, 90),
(19, 15, 2.79, FALSE, 66, 99, 80),
(19, 17, 3.57, FALSE, 34, 30, 120),
(19, 22, 2.04, FALSE, 45, 74, 40),
(19, 25, 2.38, FALSE, 51, 57, 90),
(19, 29, 5.35, FALSE, 55, 85, 50),
(19, 34, 3.15, FALSE, 20, 66, 150),
(19, 36, 1.72, FALSE, 69, 23, 80),
(19, 37, 2.67, FALSE, 66, 64, 180),
(19, 38, 3.05, FALSE, 70, 73, 70),
(20, 3, 2.40, FALSE, 29, 61, 80),
(20, 4, 4.06, FALSE, 75, 55, 120),
(20, 8, 14.08, FALSE, 88, 21, 40),
(20, 9, 2.14, FALSE, 92, 41, 150),
(20, 11, 21.00, FALSE, 61, 27, 30),
(20, 16, 3.64, FALSE, 100, 77, 100),
(20, 19, 3.65, FALSE, 35, 74, 100),
(20, 22, 2.22, FALSE, 30, 64, 40),
(20, 26, 3.28, FALSE, 88, 41, 100),
(20, 29, 4.40, FALSE, 99, 85, 50),
(20, 30, 9.12, FALSE, 57, 58, 20),
(20, 31, 14.76, FALSE, 92, 31, 20),
(20, 33, 1.82, FALSE, 33, 45, 100),
(20, 35, 1.02, FALSE, 100, 64, 200),
(20, 36, 1.81, FALSE, 79, 25, 80)
;

INSERT INTO Customers (First_Name, Last_Name, Last_Visit, Last_Item_Purchased_ID) VALUES
("Борислав", "Войнов", "2025-02-07 9:00:00", 38),
("Валентин", "Берберов", "2025-02-07 9:00:00", 33),
("Венко", "Андреев", "2025-01-31 7:25:00", 33),
("Георги", "Илиев", "2025-02-07 10:45:00", 35),
("Мирослав", "Кавръков", "2025-02-06 13:20:00", 29),
("Мирослав", "Карапенчев", "2025-02-05 11:15:00", 17),
("Михаил", "Стаматов", "2025-02-03 15:55:00", 10)
;

-- 1. Магазини с над 900000 лв. приход
SELECT Store_ID, Location, Yearly_Earnings FROM Stores WHERE Yearly_Earnings>=900000;

-- 2. Всички продукти от магазин
SELECT 
    i.Store_ID AS "Номер на магазина", i.Product_ID AS "Номер на продукта", pt.Product_Name AS "Име на продукта", i.Price AS "Цена на продукта", (i.In_Stock_Quantity+i.Backlog_Quantity) AS "Брой"
FROM Items i
JOIN ProductTypes pt ON i.Product_ID = pt.Product_ID
WHERE i.Store_ID=4
ORDER BY i.Product_ID ASC;

-- 3. Всички продукти с цена над цена
SELECT 
    i.Store_ID AS "Номер на магазина", i.Product_ID AS "Номер на продукта", pt.Product_Name AS "Име на продукта", i.Price AS "Цена на продукта"
FROM Items i
JOIN ProductTypes pt ON i.Product_ID = pt.Product_ID
WHERE i.Price>=6
ORDER BY i.Product_ID ASC;

-- 4. Сортиране по цена
SELECT 
    i.Store_ID AS "Номер на магазина", i.Product_ID AS "Номер на продукта", pt.Product_Name AS "Име на продукта", i.Price AS "Цена на продукта"
FROM Items i
JOIN ProductTypes pt ON i.Product_ID = pt.Product_ID
ORDER BY i.Price ASC;

-- 5. Стойност на всички продукти в магазин
SELECT SUM(i.Price * (i.In_Stock_Quantity + i.Backlog_Quantity)) AS Total_Value
FROM Items AS i
WHERE i.Store_ID=4;

-- 6. Среден седмичен доход на магазин
SELECT SUM(i.Price * i.Weekly_Purchases_Amount) AS Total_Value
FROM Items AS i
WHERE i.Store_ID=3;

-- 7. Извличане на продукт с най-висока наличност в магазин
SELECT 
    i.Store_ID AS "Номер на магазина", i.Product_ID AS "Номер на продукта", pt.Product_Name AS "Име на продукта", i.Price AS "Цена на продукта", (In_Stock_Quantity+Backlog_Quantity) AS Total
FROM Items i
JOIN ProductTypes pt ON i.Product_ID = pt.Product_ID
WHERE i.Store_ID=1
ORDER BY Total DESC
LIMIT 1;

-- 8. Купуване на продукт от клиент


-- 9. Презареждане на магазин
UPDATE Items AS i
JOIN Shipments AS s ON i.Store_ID = s.To_Store_ID AND i.Product_ID = s.Product_ID
SET i.In_Stock_Quantity = i.In_Stock_Quantity + s.Quantity
WHERE s.To_Store_ID = 1;



-- 10. Поръчване на продукт
INSERT INTO Shipments (Product_ID, From_Inventory_ID, To_Store_ID, Shipping_Date, Quantity)
VALUES (10, 6, 6, NOW()+1, 50);

SELECT * FROM Shipments;
